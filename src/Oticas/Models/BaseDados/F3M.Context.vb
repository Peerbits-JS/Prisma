'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class F3MEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=F3MEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property tbAgendamento() As DbSet(Of tbAgendamento)
    Public Overridable Property tbArmazens() As DbSet(Of tbArmazens)
    Public Overridable Property tbArmazensLocalizacoes() As DbSet(Of tbArmazensLocalizacoes)
    Public Overridable Property tbAros() As DbSet(Of tbAros)
    Public Overridable Property tbArtigos() As DbSet(Of tbArtigos)
    Public Overridable Property tbArtigosAlternativos() As DbSet(Of tbArtigosAlternativos)
    Public Overridable Property tbArtigosAnexos() As DbSet(Of tbArtigosAnexos)
    Public Overridable Property tbArtigosArmazensLocalizacoes() As DbSet(Of tbArtigosArmazensLocalizacoes)
    Public Overridable Property tbArtigosAssociados() As DbSet(Of tbArtigosAssociados)
    Public Overridable Property tbArtigosComponentes() As DbSet(Of tbArtigosComponentes)
    Public Overridable Property tbArtigosDadosFinanceiros() As DbSet(Of tbArtigosDadosFinanceiros)
    Public Overridable Property tbArtigosDadosFinanceirosPVsUPCPerc() As DbSet(Of tbArtigosDadosFinanceirosPVsUPCPerc)
    Public Overridable Property tbArtigosDimensoes() As DbSet(Of tbArtigosDimensoes)
    Public Overridable Property tbArtigosDimensoesEmpresa() As DbSet(Of tbArtigosDimensoesEmpresa)
    Public Overridable Property tbArtigosEspecificos() As DbSet(Of tbArtigosEspecificos)
    Public Overridable Property tbArtigosFornecedores() As DbSet(Of tbArtigosFornecedores)
    Public Overridable Property tbArtigosIdiomas() As DbSet(Of tbArtigosIdiomas)
    Public Overridable Property tbArtigosImpostoSelo() As DbSet(Of tbArtigosImpostoSelo)
    Public Overridable Property tbArtigosLotes() As DbSet(Of tbArtigosLotes)
    Public Overridable Property tbArtigosNumerosSeries() As DbSet(Of tbArtigosNumerosSeries)
    Public Overridable Property tbArtigosPrecos() As DbSet(Of tbArtigosPrecos)
    Public Overridable Property tbArtigosStock() As DbSet(Of tbArtigosStock)
    Public Overridable Property tbArtigosUnidades() As DbSet(Of tbArtigosUnidades)
    Public Overridable Property tbATEstadoComunicacao() As DbSet(Of tbATEstadoComunicacao)
    Public Overridable Property tbATEstadoComunicacaoLinhas() As DbSet(Of tbATEstadoComunicacaoLinhas)
    Public Overridable Property tbBancos() As DbSet(Of tbBancos)
    Public Overridable Property tbBancosContatos() As DbSet(Of tbBancosContatos)
    Public Overridable Property tbBancosMoradas() As DbSet(Of tbBancosMoradas)
    Public Overridable Property tbCampanhas() As DbSet(Of tbCampanhas)
    Public Overridable Property tbCCEntidades() As DbSet(Of tbCCEntidades)
    Public Overridable Property tbCCFornecedores() As DbSet(Of tbCCFornecedores)
    Public Overridable Property tbCCStockArtigos() As DbSet(Of tbCCStockArtigos)
    Public Overridable Property tbClientes() As DbSet(Of tbClientes)
    Public Overridable Property tbClientesAnexos() As DbSet(Of tbClientesAnexos)
    Public Overridable Property tbClientesContatos() As DbSet(Of tbClientesContatos)
    Public Overridable Property tbClientesLojas() As DbSet(Of tbClientesLojas)
    Public Overridable Property tbClientesMoradas() As DbSet(Of tbClientesMoradas)
    Public Overridable Property tbCodigosPostais() As DbSet(Of tbCodigosPostais)
    Public Overridable Property tbComposicoes() As DbSet(Of tbComposicoes)
    Public Overridable Property tbComposicoesIdiomas() As DbSet(Of tbComposicoesIdiomas)
    Public Overridable Property tbComunicacao() As DbSet(Of tbComunicacao)
    Public Overridable Property tbComunicacaoApis() As DbSet(Of tbComunicacaoApis)
    Public Overridable Property tbComunicacaoAutoridadeTributaria() As DbSet(Of tbComunicacaoAutoridadeTributaria)
    Public Overridable Property tbComunicacaoAutoridadeTributariaAnexos() As DbSet(Of tbComunicacaoAutoridadeTributariaAnexos)
    Public Overridable Property tbComunicacaoAutoridadeTributariaLinhas() As DbSet(Of tbComunicacaoAutoridadeTributariaLinhas)
    Public Overridable Property tbComunicacaoregistro() As DbSet(Of tbComunicacaoregistro)
    Public Overridable Property tbComunicacaoSmsTemplates() As DbSet(Of tbComunicacaoSmsTemplates)
    Public Overridable Property tbComunicacaoSmsTemplatesGrupos() As DbSet(Of tbComunicacaoSmsTemplatesGrupos)
    Public Overridable Property tbComunicacaoSmsTemplatesRegras() As DbSet(Of tbComunicacaoSmsTemplatesRegras)
    Public Overridable Property tbComunicacaoSmsTemplatesValores() As DbSet(Of tbComunicacaoSmsTemplatesValores)
    Public Overridable Property tbConcelhos() As DbSet(Of tbConcelhos)
    Public Overridable Property tbCondicionantes() As DbSet(Of tbCondicionantes)
    Public Overridable Property tbCondicoesPagamento() As DbSet(Of tbCondicoesPagamento)
    Public Overridable Property tbCondicoesPagamentoDescontos() As DbSet(Of tbCondicoesPagamentoDescontos)
    Public Overridable Property tbCondicoesPagamentoIdiomas() As DbSet(Of tbCondicoesPagamentoIdiomas)
    Public Overridable Property tbConsentimentos() As DbSet(Of tbConsentimentos)
    Public Overridable Property tbContabilidadeConfiguracao() As DbSet(Of tbContabilidadeConfiguracao)
    Public Overridable Property tbContabilidadeConfiguracaoLinhas() As DbSet(Of tbContabilidadeConfiguracaoLinhas)
    Public Overridable Property tbContabilidadeConfiguracaoModulos() As DbSet(Of tbContabilidadeConfiguracaoModulos)
    Public Overridable Property tbContabilidadeConfiguracaoTipos() As DbSet(Of tbContabilidadeConfiguracaoTipos)
    Public Overridable Property tbContabilidadeConfiguracaoValores() As DbSet(Of tbContabilidadeConfiguracaoValores)
    Public Overridable Property tbContabilidadeExportacao() As DbSet(Of tbContabilidadeExportacao)
    Public Overridable Property tbContasBancarias() As DbSet(Of tbContasBancarias)
    Public Overridable Property tbContasBancariasContatos() As DbSet(Of tbContasBancariasContatos)
    Public Overridable Property tbContasBancariasMoradas() As DbSet(Of tbContasBancariasMoradas)
    Public Overridable Property tbContasCaixa() As DbSet(Of tbContasCaixa)
    Public Overridable Property tbCoresLentes() As DbSet(Of tbCoresLentes)
    Public Overridable Property tbDimensoes() As DbSet(Of tbDimensoes)
    Public Overridable Property tbDimensoesLinhas() As DbSet(Of tbDimensoesLinhas)
    Public Overridable Property tbDistritos() As DbSet(Of tbDistritos)
    Public Overridable Property tbDocumentosCompras() As DbSet(Of tbDocumentosCompras)
    Public Overridable Property tbDocumentosComprasAnexos() As DbSet(Of tbDocumentosComprasAnexos)
    Public Overridable Property tbDocumentosComprasLinhas() As DbSet(Of tbDocumentosComprasLinhas)
    Public Overridable Property tbDocumentosComprasLinhasDimensoes() As DbSet(Of tbDocumentosComprasLinhasDimensoes)
    Public Overridable Property tbDocumentosComprasPendentes() As DbSet(Of tbDocumentosComprasPendentes)
    Public Overridable Property tbDocumentosStock() As DbSet(Of tbDocumentosStock)
    Public Overridable Property tbDocumentosStockAnexos() As DbSet(Of tbDocumentosStockAnexos)
    Public Overridable Property tbDocumentosStockContagem() As DbSet(Of tbDocumentosStockContagem)
    Public Overridable Property tbDocumentosStockContagemAnexos() As DbSet(Of tbDocumentosStockContagemAnexos)
    Public Overridable Property tbDocumentosStockContagemLinhas() As DbSet(Of tbDocumentosStockContagemLinhas)
    Public Overridable Property tbDocumentosStockLinhas() As DbSet(Of tbDocumentosStockLinhas)
    Public Overridable Property tbDocumentosStockLinhasDimensoes() As DbSet(Of tbDocumentosStockLinhasDimensoes)
    Public Overridable Property tbDocumentosVendas() As DbSet(Of tbDocumentosVendas)
    Public Overridable Property tbDocumentosVendasAnexos() As DbSet(Of tbDocumentosVendasAnexos)
    Public Overridable Property tbDocumentosVendasFormasPagamento() As DbSet(Of tbDocumentosVendasFormasPagamento)
    Public Overridable Property tbDocumentosVendasLinhas() As DbSet(Of tbDocumentosVendasLinhas)
    Public Overridable Property tbDocumentosVendasLinhasDimensoes() As DbSet(Of tbDocumentosVendasLinhasDimensoes)
    Public Overridable Property tbDocumentosVendasLinhasGraduacoes() As DbSet(Of tbDocumentosVendasLinhasGraduacoes)
    Public Overridable Property tbDocumentosVendasPendentes() As DbSet(Of tbDocumentosVendasPendentes)
    Public Overridable Property tbEntidades() As DbSet(Of tbEntidades)
    Public Overridable Property tbEntidadesAnexos() As DbSet(Of tbEntidadesAnexos)
    Public Overridable Property tbEntidadesComparticipacoes() As DbSet(Of tbEntidadesComparticipacoes)
    Public Overridable Property tbEntidadesContatos() As DbSet(Of tbEntidadesContatos)
    Public Overridable Property tbEntidadesLojas() As DbSet(Of tbEntidadesLojas)
    Public Overridable Property tbEntidadesMoradas() As DbSet(Of tbEntidadesMoradas)
    Public Overridable Property tbEscaloes() As DbSet(Of tbEscaloes)
    Public Overridable Property tbEscaloesEspecificos() As DbSet(Of tbEscaloesEspecificos)
    Public Overridable Property tbEscaloesGerais() As DbSet(Of tbEscaloesGerais)
    Public Overridable Property tbEscaloesPenalizacoes() As DbSet(Of tbEscaloesPenalizacoes)
    Public Overridable Property tbEspecialidades() As DbSet(Of tbEspecialidades)
    Public Overridable Property tbEstacoes() As DbSet(Of tbEstacoes)
    Public Overridable Property tbEstados() As DbSet(Of tbEstados)
    Public Overridable Property tbExames() As DbSet(Of tbExames)
    Public Overridable Property tbExamesAnexos() As DbSet(Of tbExamesAnexos)
    Public Overridable Property tbExamesProps() As DbSet(Of tbExamesProps)
    Public Overridable Property tbExamesPropsFotos() As DbSet(Of tbExamesPropsFotos)
    Public Overridable Property tbExamesTemplate() As DbSet(Of tbExamesTemplate)
    Public Overridable Property tbF3MRecalculo() As DbSet(Of tbF3MRecalculo)
    Public Overridable Property tbFamilias() As DbSet(Of tbFamilias)
    Public Overridable Property tbFormasExpedicao() As DbSet(Of tbFormasExpedicao)
    Public Overridable Property tbFormasExpedicaoIdiomas() As DbSet(Of tbFormasExpedicaoIdiomas)
    Public Overridable Property tbFormasPagamento() As DbSet(Of tbFormasPagamento)
    Public Overridable Property tbFormasPagamentoIdiomas() As DbSet(Of tbFormasPagamentoIdiomas)
    Public Overridable Property tbFornecedores() As DbSet(Of tbFornecedores)
    Public Overridable Property tbFornecedoresAnexos() As DbSet(Of tbFornecedoresAnexos)
    Public Overridable Property tbFornecedoresContatos() As DbSet(Of tbFornecedoresContatos)
    Public Overridable Property tbFornecedoresMoradas() As DbSet(Of tbFornecedoresMoradas)
    Public Overridable Property tbFornecedoresTiposFornecimento() As DbSet(Of tbFornecedoresTiposFornecimento)
    Public Overridable Property tbGamasLentes() As DbSet(Of tbGamasLentes)
    Public Overridable Property tbGruposArtigo() As DbSet(Of tbGruposArtigo)
    Public Overridable Property tbIdiomas() As DbSet(Of tbIdiomas)
    Public Overridable Property tbImpostoSelo() As DbSet(Of tbImpostoSelo)
    Public Overridable Property tbIVA() As DbSet(Of tbIVA)
    Public Overridable Property tbIVADescontos() As DbSet(Of tbIVADescontos)
    Public Overridable Property tbIVARegioes() As DbSet(Of tbIVARegioes)
    Public Overridable Property tbLentesContato() As DbSet(Of tbLentesContato)
    Public Overridable Property tbLentesOftalmicas() As DbSet(Of tbLentesOftalmicas)
    Public Overridable Property tbLentesOftalmicasSuplementos() As DbSet(Of tbLentesOftalmicasSuplementos)
    Public Overridable Property tbLojas() As DbSet(Of tbLojas)
    Public Overridable Property tbMapaCaixa() As DbSet(Of tbMapaCaixa)
    Public Overridable Property tbMapasVistas() As DbSet(Of tbMapasVistas)
    Public Overridable Property tbMarcas() As DbSet(Of tbMarcas)
    Public Overridable Property tbMedicosTecnicos() As DbSet(Of tbMedicosTecnicos)
    Public Overridable Property tbMedicosTecnicosAnexos() As DbSet(Of tbMedicosTecnicosAnexos)
    Public Overridable Property tbMedicosTecnicosContatos() As DbSet(Of tbMedicosTecnicosContatos)
    Public Overridable Property tbMedicosTecnicosEspecialidades() As DbSet(Of tbMedicosTecnicosEspecialidades)
    Public Overridable Property tbMedicosTecnicosMoradas() As DbSet(Of tbMedicosTecnicosMoradas)
    Public Overridable Property tbMensagemregistro() As DbSet(Of tbMensagemregistro)
    Public Overridable Property tbModelos() As DbSet(Of tbModelos)
    Public Overridable Property tbMoedas() As DbSet(Of tbMoedas)
    Public Overridable Property tbNewFeatureNotifications() As DbSet(Of tbNewFeatureNotifications)
    Public Overridable Property tbOculosSol() As DbSet(Of tbOculosSol)
    Public Overridable Property tbPagamentosCompras() As DbSet(Of tbPagamentosCompras)
    Public Overridable Property tbPagamentosComprasAnexos() As DbSet(Of tbPagamentosComprasAnexos)
    Public Overridable Property tbPagamentosComprasFormasPagamento() As DbSet(Of tbPagamentosComprasFormasPagamento)
    Public Overridable Property tbPagamentosComprasLinhas() As DbSet(Of tbPagamentosComprasLinhas)
    Public Overridable Property tbPagamentosVendas() As DbSet(Of tbPagamentosVendas)
    Public Overridable Property tbPagamentosVendasFormasPagamento() As DbSet(Of tbPagamentosVendasFormasPagamento)
    Public Overridable Property tbPagamentosVendasLinhas() As DbSet(Of tbPagamentosVendasLinhas)
    Public Overridable Property tbPaises() As DbSet(Of tbPaises)
    Public Overridable Property tbParametrizacaoConsentimentos() As DbSet(Of tbParametrizacaoConsentimentos)
    Public Overridable Property tbParametrizacaoConsentimentosCamposEntidade() As DbSet(Of tbParametrizacaoConsentimentosCamposEntidade)
    Public Overridable Property tbParametrizacaoConsentimentosPerguntas() As DbSet(Of tbParametrizacaoConsentimentosPerguntas)
    Public Overridable Property tbParametrosCamposContexto() As DbSet(Of tbParametrosCamposContexto)
    Public Overridable Property tbParametrosContexto() As DbSet(Of tbParametrosContexto)
    Public Overridable Property tbParametrosEmpresa() As DbSet(Of tbParametrosEmpresa)
    Public Overridable Property tbParametrosEmpresaCAE() As DbSet(Of tbParametrosEmpresaCAE)
    Public Overridable Property tbParametrosLoja() As DbSet(Of tbParametrosLoja)
    Public Overridable Property tbParametrosLojaLinhas() As DbSet(Of tbParametrosLojaLinhas)
    Public Overridable Property tbParametrosLojaLinhasValores() As DbSet(Of tbParametrosLojaLinhasValores)
    Public Overridable Property tbPlaneamento() As DbSet(Of tbPlaneamento)
    Public Overridable Property tbPrecosLentes() As DbSet(Of tbPrecosLentes)
    Public Overridable Property tbProfissoes() As DbSet(Of tbProfissoes)
    Public Overridable Property tbRazoes() As DbSet(Of tbRazoes)
    Public Overridable Property tbRecibos() As DbSet(Of tbRecibos)
    Public Overridable Property tbRecibosFormasPagamento() As DbSet(Of tbRecibosFormasPagamento)
    Public Overridable Property tbRecibosLinhas() As DbSet(Of tbRecibosLinhas)
    Public Overridable Property tbRecibosLinhasTaxas() As DbSet(Of tbRecibosLinhasTaxas)
    Public Overridable Property tbRespostasConsentimentos() As DbSet(Of tbRespostasConsentimentos)
    Public Overridable Property tbSAFT() As DbSet(Of tbSAFT)
    Public Overridable Property tbSegmentosMarcas() As DbSet(Of tbSegmentosMarcas)
    Public Overridable Property tbSegmentosMercado() As DbSet(Of tbSegmentosMercado)
    Public Overridable Property tbSegmentosMercadoIdiomas() As DbSet(Of tbSegmentosMercadoIdiomas)
    Public Overridable Property tbSemafroGereStock() As DbSet(Of tbSemafroGereStock)
    Public Overridable Property tbServicos() As DbSet(Of tbServicos)
    Public Overridable Property tbServicosFases() As DbSet(Of tbServicosFases)
    Public Overridable Property tbSetoresAtividade() As DbSet(Of tbSetoresAtividade)
    Public Overridable Property tbSetoresAtividadeIdiomas() As DbSet(Of tbSetoresAtividadeIdiomas)
    Public Overridable Property tbSistemaAcoes() As DbSet(Of tbSistemaAcoes)
    Public Overridable Property tbSistemaCamposFormulas() As DbSet(Of tbSistemaCamposFormulas)
    Public Overridable Property tbSistemaClassificacoesTiposArtigos() As DbSet(Of tbSistemaClassificacoesTiposArtigos)
    Public Overridable Property tbSistemaClassificacoesTiposArtigosGeral() As DbSet(Of tbSistemaClassificacoesTiposArtigosGeral)
    Public Overridable Property tbSistemaCodigosIVA() As DbSet(Of tbSistemaCodigosIVA)
    Public Overridable Property tbSistemaCodigosPrecos() As DbSet(Of tbSistemaCodigosPrecos)
    Public Overridable Property tbSistemaCompostoTransformacaoMetodoCusto() As DbSet(Of tbSistemaCompostoTransformacaoMetodoCusto)
    Public Overridable Property tbSistemaComunicacao() As DbSet(Of tbSistemaComunicacao)
    Public Overridable Property tbSistemaComunicacaoSmsTemplatesCondicoes() As DbSet(Of tbSistemaComunicacaoSmsTemplatesCondicoes)
    Public Overridable Property tbSistemaComunicacaoSmsTemplatesFiltros() As DbSet(Of tbSistemaComunicacaoSmsTemplatesFiltros)
    Public Overridable Property tbSistemaComunicacaoSmsTemplatesValores() As DbSet(Of tbSistemaComunicacaoSmsTemplatesValores)
    Public Overridable Property tbSistemaEmissaoFatura() As DbSet(Of tbSistemaEmissaoFatura)
    Public Overridable Property tbSistemaEmissaoPackingList() As DbSet(Of tbSistemaEmissaoPackingList)
    Public Overridable Property tbSistemaEntidadeComparticipacao() As DbSet(Of tbSistemaEntidadeComparticipacao)
    Public Overridable Property tbSistemaEntidadeDescricao() As DbSet(Of tbSistemaEntidadeDescricao)
    Public Overridable Property tbSistemaEntidadesEstados() As DbSet(Of tbSistemaEntidadesEstados)
    Public Overridable Property tbSistemaEntidadesF3M() As DbSet(Of tbSistemaEntidadesF3M)
    Public Overridable Property tbSistemaEntidadesFormulas() As DbSet(Of tbSistemaEntidadesFormulas)
    Public Overridable Property tbSistemaEspacoFiscal() As DbSet(Of tbSistemaEspacoFiscal)
    Public Overridable Property tbSistemaEstadoCivil() As DbSet(Of tbSistemaEstadoCivil)
    Public Overridable Property tbSistemaFormasCalculoComissoes() As DbSet(Of tbSistemaFormasCalculoComissoes)
    Public Overridable Property tbSistemaFormatoUnidadeTempo() As DbSet(Of tbSistemaFormatoUnidadeTempo)
    Public Overridable Property tbSistemaFuncionalidadesConsentimento() As DbSet(Of tbSistemaFuncionalidadesConsentimento)
    Public Overridable Property tbSistemaIdiomas() As DbSet(Of tbSistemaIdiomas)
    Public Overridable Property tbSistemaMateriasLentes() As DbSet(Of tbSistemaMateriasLentes)
    Public Overridable Property tbSistemaModulos() As DbSet(Of tbSistemaModulos)
    Public Overridable Property tbSistemaMoedas() As DbSet(Of tbSistemaMoedas)
    Public Overridable Property tbSistemaNaturezas() As DbSet(Of tbSistemaNaturezas)
    Public Overridable Property tbSistemaOrdemLotes() As DbSet(Of tbSistemaOrdemLotes)
    Public Overridable Property tbSistemaParametrosLoja() As DbSet(Of tbSistemaParametrosLoja)
    Public Overridable Property tbSistemaParentesco() As DbSet(Of tbSistemaParentesco)
    Public Overridable Property tbSistemaRegimeIVA() As DbSet(Of tbSistemaRegimeIVA)
    Public Overridable Property tbSistemaRegioesIVA() As DbSet(Of tbSistemaRegioesIVA)
    Public Overridable Property tbSistemaRelacaoEspacoFiscalRegimeIva() As DbSet(Of tbSistemaRelacaoEspacoFiscalRegimeIva)
    Public Overridable Property tbSistemaSexo() As DbSet(Of tbSistemaSexo)
    Public Overridable Property tbSistemaSiglasPaises() As DbSet(Of tbSistemaSiglasPaises)
    Public Overridable Property tbSistemaSuperficiesLentes() As DbSet(Of tbSistemaSuperficiesLentes)
    Public Overridable Property tbSistemaTipoDistMatPrima() As DbSet(Of tbSistemaTipoDistMatPrima)
    Public Overridable Property tbSistemaTipoDistOperacoes() As DbSet(Of tbSistemaTipoDistOperacoes)
    Public Overridable Property tbSistemaTipoOp() As DbSet(Of tbSistemaTipoOp)
    Public Overridable Property tbSistemaTipoOperacoes() As DbSet(Of tbSistemaTipoOperacoes)
    Public Overridable Property tbSistemaTiposAnexos() As DbSet(Of tbSistemaTiposAnexos)
    Public Overridable Property tbSistemaTiposComponente() As DbSet(Of tbSistemaTiposComponente)
    Public Overridable Property tbSistemaTiposComposicoes() As DbSet(Of tbSistemaTiposComposicoes)
    Public Overridable Property tbSistemaTiposCondDataVencimento() As DbSet(Of tbSistemaTiposCondDataVencimento)
    Public Overridable Property tbSistemaTiposDimensoes() As DbSet(Of tbSistemaTiposDimensoes)
    Public Overridable Property tbSistemaTiposDocumento() As DbSet(Of tbSistemaTiposDocumento)
    Public Overridable Property tbSistemaTiposDocumentoColunasAutomaticas() As DbSet(Of tbSistemaTiposDocumentoColunasAutomaticas)
    Public Overridable Property tbSistemaTiposDocumentoComunicacao() As DbSet(Of tbSistemaTiposDocumentoComunicacao)
    Public Overridable Property tbSistemaTiposDocumentoFiscal() As DbSet(Of tbSistemaTiposDocumentoFiscal)
    Public Overridable Property tbSistemaTiposDocumentoImportacao() As DbSet(Of tbSistemaTiposDocumentoImportacao)
    Public Overridable Property tbSistemaTiposDocumentoMovStock() As DbSet(Of tbSistemaTiposDocumentoMovStock)
    Public Overridable Property tbSistemaTiposDocumentoOrigem() As DbSet(Of tbSistemaTiposDocumentoOrigem)
    Public Overridable Property tbSistemaTiposDocumentoPrecoUnitario() As DbSet(Of tbSistemaTiposDocumentoPrecoUnitario)
    Public Overridable Property tbSistemaTiposEntidade() As DbSet(Of tbSistemaTiposEntidade)
    Public Overridable Property tbSistemaTiposEntidadeModulos() As DbSet(Of tbSistemaTiposEntidadeModulos)
    Public Overridable Property tbSistemaTiposEstados() As DbSet(Of tbSistemaTiposEstados)
    Public Overridable Property tbSistemaTiposEtiquetas() As DbSet(Of tbSistemaTiposEtiquetas)
    Public Overridable Property tbSistemaTiposExtensoesFicheiros() As DbSet(Of tbSistemaTiposExtensoesFicheiros)
    Public Overridable Property tbSistemaTiposFases() As DbSet(Of tbSistemaTiposFases)
    Public Overridable Property tbSistemaTiposFormasPagamento() As DbSet(Of tbSistemaTiposFormasPagamento)
    Public Overridable Property tbSistemaTiposGraduacoes() As DbSet(Of tbSistemaTiposGraduacoes)
    Public Overridable Property tbSistemaTiposIVA() As DbSet(Of tbSistemaTiposIVA)
    Public Overridable Property tbSistemaTiposLentes() As DbSet(Of tbSistemaTiposLentes)
    Public Overridable Property tbSistemaTiposLinhasMP() As DbSet(Of tbSistemaTiposLinhasMP)
    Public Overridable Property tbSistemaTiposLiquidacao() As DbSet(Of tbSistemaTiposLiquidacao)
    Public Overridable Property tbSistemaTiposMaquinas() As DbSet(Of tbSistemaTiposMaquinas)
    Public Overridable Property tbSistemaTiposOlhos() As DbSet(Of tbSistemaTiposOlhos)
    Public Overridable Property tbSistemaTiposPessoa() As DbSet(Of tbSistemaTiposPessoa)
    Public Overridable Property tbSistemaTiposPrecos() As DbSet(Of tbSistemaTiposPrecos)
    Public Overridable Property tbSistemaTiposServicos() As DbSet(Of tbSistemaTiposServicos)
    Public Overridable Property tbSistemaTiposTextoBase() As DbSet(Of tbSistemaTiposTextoBase)
    Public Overridable Property tbSistemaVerbasIS() As DbSet(Of tbSistemaVerbasIS)
    Public Overridable Property tbStockArtigos() As DbSet(Of tbStockArtigos)
    Public Overridable Property tbStockArtigosNecessidades() As DbSet(Of tbStockArtigosNecessidades)
    Public Overridable Property tbSubFamilias() As DbSet(Of tbSubFamilias)
    Public Overridable Property tbSuplementosLentes() As DbSet(Of tbSuplementosLentes)
    Public Overridable Property tbTemplates() As DbSet(Of tbTemplates)
    Public Overridable Property tbTextosBase() As DbSet(Of tbTextosBase)
    Public Overridable Property tbTiposArtigos() As DbSet(Of tbTiposArtigos)
    Public Overridable Property tbTiposConsultas() As DbSet(Of tbTiposConsultas)
    Public Overridable Property tbTiposContatos() As DbSet(Of tbTiposContatos)
    Public Overridable Property tbTiposDados() As DbSet(Of tbTiposDados)
    Public Overridable Property tbTiposDocumento() As DbSet(Of tbTiposDocumento)
    Public Overridable Property tbTiposDocumentoIdioma() As DbSet(Of tbTiposDocumentoIdioma)
    Public Overridable Property tbTiposDocumentoSeries() As DbSet(Of tbTiposDocumentoSeries)
    Public Overridable Property tbTiposDocumentoSeriesPermissoes() As DbSet(Of tbTiposDocumentoSeriesPermissoes)
    Public Overridable Property tbTiposDocumentoTipEntPermDoc() As DbSet(Of tbTiposDocumentoTipEntPermDoc)
    Public Overridable Property tbTiposFases() As DbSet(Of tbTiposFases)
    Public Overridable Property tbTiposFornecimentos() As DbSet(Of tbTiposFornecimentos)
    Public Overridable Property tbTiposRelacao() As DbSet(Of tbTiposRelacao)
    Public Overridable Property tbTiposRetencao() As DbSet(Of tbTiposRetencao)
    Public Overridable Property tbTiposTratamentosLentes() As DbSet(Of tbTiposTratamentosLentes)
    Public Overridable Property tbTratamentosLentes() As DbSet(Of tbTratamentosLentes)
    Public Overridable Property tbUnidades() As DbSet(Of tbUnidades)
    Public Overridable Property tbUnidadesRelacoes() As DbSet(Of tbUnidadesRelacoes)
    Public Overridable Property tbUnidadesTempo() As DbSet(Of tbUnidadesTempo)
    Public Overridable Property tbVersao() As DbSet(Of tbVersao)
    Public Overridable Property tbControloDocumentos() As DbSet(Of tbControloDocumentos)
    Public Overridable Property tbControloValidacaoStock() As DbSet(Of tbControloValidacaoStock)
    Public Overridable Property vwArtigos() As DbSet(Of vwArtigos)
    Public Overridable Property vwCCArtigos() As DbSet(Of vwCCArtigos)
    Public Overridable Property vwCCClientes() As DbSet(Of vwCCClientes)
    Public Overridable Property vwCCFornecedores() As DbSet(Of vwCCFornecedores)
    Public Overridable Property vwContagemStock() As DbSet(Of vwContagemStock)
    Public Overridable Property vwExamesProps() As DbSet(Of vwExamesProps)
    Public Overridable Property vwMapaCaixa() As DbSet(Of vwMapaCaixa)
    Public Overridable Property vwMapaIvaCompras() As DbSet(Of vwMapaIvaCompras)
    Public Overridable Property vwMapaIvaVendas() As DbSet(Of vwMapaIvaVendas)
    Public Overridable Property vwMapaPendentesCompras() As DbSet(Of vwMapaPendentesCompras)
    Public Overridable Property vwMapaPendentesVendas() As DbSet(Of vwMapaPendentesVendas)
    Public Overridable Property vwMapaRankingCompras() As DbSet(Of vwMapaRankingCompras)
    Public Overridable Property vwMapaRankingVendas() As DbSet(Of vwMapaRankingVendas)
    Public Overridable Property vwStokArtigos() As DbSet(Of vwStokArtigos)

    <DbFunction("Entities", "fnDocumentosVendasClientesPorDia")>
    Public Overridable Function fnDocumentosVendasClientesPorDia(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), utilizadorCriacao As String) As IQueryable(Of fnDocumentosVendasClientesPorDia_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim utilizadorCriacaoParameter As ObjectParameter = If(utilizadorCriacao IsNot Nothing, New ObjectParameter("UtilizadorCriacao", utilizadorCriacao), New ObjectParameter("UtilizadorCriacao", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnDocumentosVendasClientesPorDia_Result)("[Entities].[fnDocumentosVendasClientesPorDia](@DataDe, @DataAte, @IDLoja, @IDCampanha, @UtilizadorCriacao)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, utilizadorCriacaoParameter)
    End Function

    <DbFunction("Entities", "fnDocumentosVendasCruzadas")>
    Public Overridable Function fnDocumentosVendasCruzadas(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), utilizadorCriacao As String) As IQueryable(Of fnDocumentosVendasCruzadas_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim utilizadorCriacaoParameter As ObjectParameter = If(utilizadorCriacao IsNot Nothing, New ObjectParameter("UtilizadorCriacao", utilizadorCriacao), New ObjectParameter("UtilizadorCriacao", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnDocumentosVendasCruzadas_Result)("[Entities].[fnDocumentosVendasCruzadas](@DataDe, @DataAte, @IDLoja, @IDCampanha, @UtilizadorCriacao)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, utilizadorCriacaoParameter)
    End Function

    <DbFunction("Entities", "fnDocumentosVendasIdade")>
    Public Overridable Function fnDocumentosVendasIdade(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), utilizadorCriacao As String, idade As Nullable(Of Integer)) As IQueryable(Of fnDocumentosVendasIdade_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim utilizadorCriacaoParameter As ObjectParameter = If(utilizadorCriacao IsNot Nothing, New ObjectParameter("UtilizadorCriacao", utilizadorCriacao), New ObjectParameter("UtilizadorCriacao", GetType(String)))

        Dim idadeParameter As ObjectParameter = If(idade.HasValue, New ObjectParameter("Idade", idade), New ObjectParameter("Idade", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnDocumentosVendasIdade_Result)("[Entities].[fnDocumentosVendasIdade](@DataDe, @DataAte, @IDLoja, @IDCampanha, @UtilizadorCriacao, @Idade)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, utilizadorCriacaoParameter, idadeParameter)
    End Function

    <DbFunction("Entities", "fnDocumentosVendasLC")>
    Public Overridable Function fnDocumentosVendasLC(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), utilizadorCriacao As String) As IQueryable(Of fnDocumentosVendasLC_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim utilizadorCriacaoParameter As ObjectParameter = If(utilizadorCriacao IsNot Nothing, New ObjectParameter("UtilizadorCriacao", utilizadorCriacao), New ObjectParameter("UtilizadorCriacao", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnDocumentosVendasLC_Result)("[Entities].[fnDocumentosVendasLC](@DataDe, @DataAte, @IDLoja, @IDCampanha, @UtilizadorCriacao)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, utilizadorCriacaoParameter)
    End Function

    <DbFunction("Entities", "fnDocumentosVendasOculos")>
    Public Overridable Function fnDocumentosVendasOculos(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), utilizadorCriacao As String) As IQueryable(Of fnDocumentosVendasOculos_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim utilizadorCriacaoParameter As ObjectParameter = If(utilizadorCriacao IsNot Nothing, New ObjectParameter("UtilizadorCriacao", utilizadorCriacao), New ObjectParameter("UtilizadorCriacao", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnDocumentosVendasOculos_Result)("[Entities].[fnDocumentosVendasOculos](@DataDe, @DataAte, @IDLoja, @IDCampanha, @UtilizadorCriacao)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, utilizadorCriacaoParameter)
    End Function

    <DbFunction("Entities", "fnDocumentosVendasOS")>
    Public Overridable Function fnDocumentosVendasOS(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), utilizadorCriacao As String) As IQueryable(Of fnDocumentosVendasOS_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim utilizadorCriacaoParameter As ObjectParameter = If(utilizadorCriacao IsNot Nothing, New ObjectParameter("UtilizadorCriacao", utilizadorCriacao), New ObjectParameter("UtilizadorCriacao", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnDocumentosVendasOS_Result)("[Entities].[fnDocumentosVendasOS](@DataDe, @DataAte, @IDLoja, @IDCampanha, @UtilizadorCriacao)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, utilizadorCriacaoParameter)
    End Function

    <DbFunction("Entities", "fnDocumentosVendasPRG")>
    Public Overridable Function fnDocumentosVendasPRG(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), utilizadorCriacao As String, idade As Nullable(Of Long)) As IQueryable(Of fnDocumentosVendasPRG_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim utilizadorCriacaoParameter As ObjectParameter = If(utilizadorCriacao IsNot Nothing, New ObjectParameter("UtilizadorCriacao", utilizadorCriacao), New ObjectParameter("UtilizadorCriacao", GetType(String)))

        Dim idadeParameter As ObjectParameter = If(idade.HasValue, New ObjectParameter("Idade", idade), New ObjectParameter("Idade", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnDocumentosVendasPRG_Result)("[Entities].[fnDocumentosVendasPRG](@DataDe, @DataAte, @IDLoja, @IDCampanha, @UtilizadorCriacao, @Idade)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, utilizadorCriacaoParameter, idadeParameter)
    End Function

    <DbFunction("Entities", "fnDocumentosVendasTiposArtigos")>
    Public Overridable Function fnDocumentosVendasTiposArtigos(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), utilizadorCriacao As String, idade As Nullable(Of Integer)) As IQueryable(Of fnDocumentosVendasTiposArtigos_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim utilizadorCriacaoParameter As ObjectParameter = If(utilizadorCriacao IsNot Nothing, New ObjectParameter("UtilizadorCriacao", utilizadorCriacao), New ObjectParameter("UtilizadorCriacao", GetType(String)))

        Dim idadeParameter As ObjectParameter = If(idade.HasValue, New ObjectParameter("Idade", idade), New ObjectParameter("Idade", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnDocumentosVendasTiposArtigos_Result)("[Entities].[fnDocumentosVendasTiposArtigos](@DataDe, @DataAte, @IDLoja, @IDCampanha, @UtilizadorCriacao, @Idade)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, utilizadorCriacaoParameter, idadeParameter)
    End Function

    <DbFunction("Entities", "fnDocumentosVendasTiposArtigosTipo")>
    Public Overridable Function fnDocumentosVendasTiposArtigosTipo(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), utilizadorCriacao As String, idade As Nullable(Of Integer), tipo As String) As IQueryable(Of fnDocumentosVendasTiposArtigosTipo_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim utilizadorCriacaoParameter As ObjectParameter = If(utilizadorCriacao IsNot Nothing, New ObjectParameter("UtilizadorCriacao", utilizadorCriacao), New ObjectParameter("UtilizadorCriacao", GetType(String)))

        Dim idadeParameter As ObjectParameter = If(idade.HasValue, New ObjectParameter("Idade", idade), New ObjectParameter("Idade", GetType(Integer)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("Tipo", tipo), New ObjectParameter("Tipo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnDocumentosVendasTiposArtigosTipo_Result)("[Entities].[fnDocumentosVendasTiposArtigosTipo](@DataDe, @DataAte, @IDLoja, @IDCampanha, @UtilizadorCriacao, @Idade, @Tipo)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, utilizadorCriacaoParameter, idadeParameter, tipoParameter)
    End Function

    <DbFunction("Entities", "fnDocumentosVendasTotalSemIva")>
    Public Overridable Function fnDocumentosVendasTotalSemIva(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), utilizadorCriacao As String) As IQueryable(Of fnDocumentosVendasTotalSemIva_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim utilizadorCriacaoParameter As ObjectParameter = If(utilizadorCriacao IsNot Nothing, New ObjectParameter("UtilizadorCriacao", utilizadorCriacao), New ObjectParameter("UtilizadorCriacao", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnDocumentosVendasTotalSemIva_Result)("[Entities].[fnDocumentosVendasTotalSemIva](@DataDe, @DataAte, @IDLoja, @IDCampanha, @UtilizadorCriacao)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, utilizadorCriacaoParameter)
    End Function

    <DbFunction("Entities", "fnInventarioData")>
    Public Overridable Function fnInventarioData(data As Nullable(Of Date), iDValorizado As Nullable(Of Integer)) As IQueryable(Of fnInventarioData_Result)
        Dim dataParameter As ObjectParameter = If(data.HasValue, New ObjectParameter("Data", data), New ObjectParameter("Data", GetType(Date)))

        Dim iDValorizadoParameter As ObjectParameter = If(iDValorizado.HasValue, New ObjectParameter("IDValorizado", iDValorizado), New ObjectParameter("IDValorizado", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnInventarioData_Result)("[Entities].[fnInventarioData](@Data, @IDValorizado)", dataParameter, iDValorizadoParameter)
    End Function

    <DbFunction("Entities", "fnPerformanceMedicoTecnico")>
    Public Overridable Function fnPerformanceMedicoTecnico(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), iDTipoArtigo As Nullable(Of Long), iDMedicoTecnico As Nullable(Of Long)) As IQueryable(Of fnPerformanceMedicoTecnico_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim iDTipoArtigoParameter As ObjectParameter = If(iDTipoArtigo.HasValue, New ObjectParameter("IDTipoArtigo", iDTipoArtigo), New ObjectParameter("IDTipoArtigo", GetType(Long)))

        Dim iDMedicoTecnicoParameter As ObjectParameter = If(iDMedicoTecnico.HasValue, New ObjectParameter("IDMedicoTecnico", iDMedicoTecnico), New ObjectParameter("IDMedicoTecnico", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnPerformanceMedicoTecnico_Result)("[Entities].[fnPerformanceMedicoTecnico](@DataDe, @DataAte, @IDLoja, @IDCampanha, @IDTipoArtigo, @IDMedicoTecnico)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, iDTipoArtigoParameter, iDMedicoTecnicoParameter)
    End Function

    <DbFunction("Entities", "fnPerformanceUtilizador")>
    Public Overridable Function fnPerformanceUtilizador(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), utilizadorCriacao As String, idade As Nullable(Of Long)) As IQueryable(Of fnPerformanceUtilizador_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim utilizadorCriacaoParameter As ObjectParameter = If(utilizadorCriacao IsNot Nothing, New ObjectParameter("UtilizadorCriacao", utilizadorCriacao), New ObjectParameter("UtilizadorCriacao", GetType(String)))

        Dim idadeParameter As ObjectParameter = If(idade.HasValue, New ObjectParameter("Idade", idade), New ObjectParameter("Idade", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnPerformanceUtilizador_Result)("[Entities].[fnPerformanceUtilizador](@DataDe, @DataAte, @IDLoja, @IDCampanha, @UtilizadorCriacao, @Idade)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, utilizadorCriacaoParameter, idadeParameter)
    End Function

    <DbFunction("Entities", "fnRetornaExamesContactologiaMedTec")>
    Public Overridable Function fnRetornaExamesContactologiaMedTec(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long)) As IQueryable(Of fnRetornaExamesContactologiaMedTec_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnRetornaExamesContactologiaMedTec_Result)("[Entities].[fnRetornaExamesContactologiaMedTec](@DataDe, @DataAte, @IDLoja)", dataDeParameter, dataAteParameter, iDLojaParameter)
    End Function

    <DbFunction("Entities", "fnRetornaExamesMedTec")>
    Public Overridable Function fnRetornaExamesMedTec(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long)) As IQueryable(Of fnRetornaExamesMedTec_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnRetornaExamesMedTec_Result)("[Entities].[fnRetornaExamesMedTec](@DataDe, @DataAte, @IDLoja)", dataDeParameter, dataAteParameter, iDLojaParameter)
    End Function

    <DbFunction("Entities", "fnRetornaServicosComTipoArtigoMedTec")>
    Public Overridable Function fnRetornaServicosComTipoArtigoMedTec(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long), iDTipoArtigo As Nullable(Of Long)) As IQueryable(Of fnRetornaServicosComTipoArtigoMedTec_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Dim iDTipoArtigoParameter As ObjectParameter = If(iDTipoArtigo.HasValue, New ObjectParameter("IDTipoArtigo", iDTipoArtigo), New ObjectParameter("IDTipoArtigo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnRetornaServicosComTipoArtigoMedTec_Result)("[Entities].[fnRetornaServicosComTipoArtigoMedTec](@DataDe, @DataAte, @IDLoja, @IDCampanha, @IDTipoArtigo)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter, iDTipoArtigoParameter)
    End Function

    <DbFunction("Entities", "fnRetornaServicosContactologiaMedTec")>
    Public Overridable Function fnRetornaServicosContactologiaMedTec(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long)) As IQueryable(Of fnRetornaServicosContactologiaMedTec_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnRetornaServicosContactologiaMedTec_Result)("[Entities].[fnRetornaServicosContactologiaMedTec](@DataDe, @DataAte, @IDLoja, @IDCampanha)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter)
    End Function

    <DbFunction("Entities", "fnRetornaServicosMedTec")>
    Public Overridable Function fnRetornaServicosMedTec(dataDe As Nullable(Of Date), dataAte As Nullable(Of Date), iDLoja As Nullable(Of Long), iDCampanha As Nullable(Of Long)) As IQueryable(Of fnRetornaServicosMedTec_Result)
        Dim dataDeParameter As ObjectParameter = If(dataDe.HasValue, New ObjectParameter("DataDe", dataDe), New ObjectParameter("DataDe", GetType(Date)))

        Dim dataAteParameter As ObjectParameter = If(dataAte.HasValue, New ObjectParameter("DataAte", dataAte), New ObjectParameter("DataAte", GetType(Date)))

        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Dim iDCampanhaParameter As ObjectParameter = If(iDCampanha.HasValue, New ObjectParameter("IDCampanha", iDCampanha), New ObjectParameter("IDCampanha", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fnRetornaServicosMedTec_Result)("[Entities].[fnRetornaServicosMedTec](@DataDe, @DataAte, @IDLoja, @IDCampanha)", dataDeParameter, dataAteParameter, iDLojaParameter, iDCampanhaParameter)
    End Function

    Public Overridable Function sp_AtualizaArtigos(lngidDocumento As Nullable(Of Long), lngidTipoDocumento As Nullable(Of Long), intAccao As Nullable(Of Integer), strTabelaCabecalho As String, strTabelaLinhas As String, strTabelaLinhasDist As String, strCampoRelTabelaLinhasCab As String, strCampoRelTabelaLinhasDistLinhas As String, strUtilizador As String) As Integer
        Dim lngidDocumentoParameter As ObjectParameter = If(lngidDocumento.HasValue, New ObjectParameter("lngidDocumento", lngidDocumento), New ObjectParameter("lngidDocumento", GetType(Long)))

        Dim lngidTipoDocumentoParameter As ObjectParameter = If(lngidTipoDocumento.HasValue, New ObjectParameter("lngidTipoDocumento", lngidTipoDocumento), New ObjectParameter("lngidTipoDocumento", GetType(Long)))

        Dim intAccaoParameter As ObjectParameter = If(intAccao.HasValue, New ObjectParameter("intAccao", intAccao), New ObjectParameter("intAccao", GetType(Integer)))

        Dim strTabelaCabecalhoParameter As ObjectParameter = If(strTabelaCabecalho IsNot Nothing, New ObjectParameter("strTabelaCabecalho", strTabelaCabecalho), New ObjectParameter("strTabelaCabecalho", GetType(String)))

        Dim strTabelaLinhasParameter As ObjectParameter = If(strTabelaLinhas IsNot Nothing, New ObjectParameter("strTabelaLinhas", strTabelaLinhas), New ObjectParameter("strTabelaLinhas", GetType(String)))

        Dim strTabelaLinhasDistParameter As ObjectParameter = If(strTabelaLinhasDist IsNot Nothing, New ObjectParameter("strTabelaLinhasDist", strTabelaLinhasDist), New ObjectParameter("strTabelaLinhasDist", GetType(String)))

        Dim strCampoRelTabelaLinhasCabParameter As ObjectParameter = If(strCampoRelTabelaLinhasCab IsNot Nothing, New ObjectParameter("strCampoRelTabelaLinhasCab", strCampoRelTabelaLinhasCab), New ObjectParameter("strCampoRelTabelaLinhasCab", GetType(String)))

        Dim strCampoRelTabelaLinhasDistLinhasParameter As ObjectParameter = If(strCampoRelTabelaLinhasDistLinhas IsNot Nothing, New ObjectParameter("strCampoRelTabelaLinhasDistLinhas", strCampoRelTabelaLinhasDistLinhas), New ObjectParameter("strCampoRelTabelaLinhasDistLinhas", GetType(String)))

        Dim strUtilizadorParameter As ObjectParameter = If(strUtilizador IsNot Nothing, New ObjectParameter("strUtilizador", strUtilizador), New ObjectParameter("strUtilizador", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_AtualizaArtigos", lngidDocumentoParameter, lngidTipoDocumentoParameter, intAccaoParameter, strTabelaCabecalhoParameter, strTabelaLinhasParameter, strTabelaLinhasDistParameter, strCampoRelTabelaLinhasCabParameter, strCampoRelTabelaLinhasDistLinhasParameter, strUtilizadorParameter)
    End Function

    Public Overridable Function sp_AtualizaCCEntidades(lngidDocumento As Nullable(Of Long), lngidTipoDocumento As Nullable(Of Long), intAccao As Nullable(Of Integer), strUtilizador As String, lngidEntidade As Nullable(Of Long)) As Integer
        Dim lngidDocumentoParameter As ObjectParameter = If(lngidDocumento.HasValue, New ObjectParameter("lngidDocumento", lngidDocumento), New ObjectParameter("lngidDocumento", GetType(Long)))

        Dim lngidTipoDocumentoParameter As ObjectParameter = If(lngidTipoDocumento.HasValue, New ObjectParameter("lngidTipoDocumento", lngidTipoDocumento), New ObjectParameter("lngidTipoDocumento", GetType(Long)))

        Dim intAccaoParameter As ObjectParameter = If(intAccao.HasValue, New ObjectParameter("intAccao", intAccao), New ObjectParameter("intAccao", GetType(Integer)))

        Dim strUtilizadorParameter As ObjectParameter = If(strUtilizador IsNot Nothing, New ObjectParameter("strUtilizador", strUtilizador), New ObjectParameter("strUtilizador", GetType(String)))

        Dim lngidEntidadeParameter As ObjectParameter = If(lngidEntidade.HasValue, New ObjectParameter("lngidEntidade", lngidEntidade), New ObjectParameter("lngidEntidade", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_AtualizaCCEntidades", lngidDocumentoParameter, lngidTipoDocumentoParameter, intAccaoParameter, strUtilizadorParameter, lngidEntidadeParameter)
    End Function

    Public Overridable Function sp_AtualizaCCFornecedores(lngidDocumento As Nullable(Of Long), lngidTipoDocumento As Nullable(Of Long), intAccao As Nullable(Of Integer), strUtilizador As String, lngidEntidade As Nullable(Of Long)) As Integer
        Dim lngidDocumentoParameter As ObjectParameter = If(lngidDocumento.HasValue, New ObjectParameter("lngidDocumento", lngidDocumento), New ObjectParameter("lngidDocumento", GetType(Long)))

        Dim lngidTipoDocumentoParameter As ObjectParameter = If(lngidTipoDocumento.HasValue, New ObjectParameter("lngidTipoDocumento", lngidTipoDocumento), New ObjectParameter("lngidTipoDocumento", GetType(Long)))

        Dim intAccaoParameter As ObjectParameter = If(intAccao.HasValue, New ObjectParameter("intAccao", intAccao), New ObjectParameter("intAccao", GetType(Integer)))

        Dim strUtilizadorParameter As ObjectParameter = If(strUtilizador IsNot Nothing, New ObjectParameter("strUtilizador", strUtilizador), New ObjectParameter("strUtilizador", GetType(String)))

        Dim lngidEntidadeParameter As ObjectParameter = If(lngidEntidade.HasValue, New ObjectParameter("lngidEntidade", lngidEntidade), New ObjectParameter("lngidEntidade", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_AtualizaCCFornecedores", lngidDocumentoParameter, lngidTipoDocumentoParameter, intAccaoParameter, strUtilizadorParameter, lngidEntidadeParameter)
    End Function

    Public Overridable Function sp_AtualizaDocumentosVendas() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_AtualizaDocumentosVendas")
    End Function

    Public Overridable Function sp_AtualizaDocumentosVendasRC() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_AtualizaDocumentosVendasRC")
    End Function

    Public Overridable Function sp_AtualizaMapaCaixa(lngidDocumento As Nullable(Of Long), lngidTipoDocumento As Nullable(Of Long), intAccao As Nullable(Of Integer), strUtilizador As String, idContaCaixa As Nullable(Of Integer)) As Integer
        Dim lngidDocumentoParameter As ObjectParameter = If(lngidDocumento.HasValue, New ObjectParameter("lngidDocumento", lngidDocumento), New ObjectParameter("lngidDocumento", GetType(Long)))

        Dim lngidTipoDocumentoParameter As ObjectParameter = If(lngidTipoDocumento.HasValue, New ObjectParameter("lngidTipoDocumento", lngidTipoDocumento), New ObjectParameter("lngidTipoDocumento", GetType(Long)))

        Dim intAccaoParameter As ObjectParameter = If(intAccao.HasValue, New ObjectParameter("intAccao", intAccao), New ObjectParameter("intAccao", GetType(Integer)))

        Dim strUtilizadorParameter As ObjectParameter = If(strUtilizador IsNot Nothing, New ObjectParameter("strUtilizador", strUtilizador), New ObjectParameter("strUtilizador", GetType(String)))

        Dim idContaCaixaParameter As ObjectParameter = If(idContaCaixa.HasValue, New ObjectParameter("idContaCaixa", idContaCaixa), New ObjectParameter("idContaCaixa", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_AtualizaMapaCaixa", lngidDocumentoParameter, lngidTipoDocumentoParameter, intAccaoParameter, strUtilizadorParameter, idContaCaixaParameter)
    End Function

    Public Overridable Function sp_AtualizaParametrosContexto(iDLoja As Nullable(Of Long)) As Integer
        Dim iDLojaParameter As ObjectParameter = If(iDLoja.HasValue, New ObjectParameter("IDLoja", iDLoja), New ObjectParameter("IDLoja", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_AtualizaParametrosContexto", iDLojaParameter)
    End Function

    Public Overridable Function sp_AtualizaQtdRequisitada(lngidDocumento As Nullable(Of Long), lngidTipoDocumento As Nullable(Of Long), intAccao As Nullable(Of Integer)) As Integer
        Dim lngidDocumentoParameter As ObjectParameter = If(lngidDocumento.HasValue, New ObjectParameter("lngidDocumento", lngidDocumento), New ObjectParameter("lngidDocumento", GetType(Long)))

        Dim lngidTipoDocumentoParameter As ObjectParameter = If(lngidTipoDocumento.HasValue, New ObjectParameter("lngidTipoDocumento", lngidTipoDocumento), New ObjectParameter("lngidTipoDocumento", GetType(Long)))

        Dim intAccaoParameter As ObjectParameter = If(intAccao.HasValue, New ObjectParameter("intAccao", intAccao), New ObjectParameter("intAccao", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_AtualizaQtdRequisitada", lngidDocumentoParameter, lngidTipoDocumentoParameter, intAccaoParameter)
    End Function

    Public Overridable Function sp_AtualizaStock(lngidDocumento As Nullable(Of Long), lngidTipoDocumento As Nullable(Of Long), intAccao As Nullable(Of Integer), strTabelaCabecalho As String, strTabelaLinhas As String, strTabelaLinhasDist As String, strCampoRelTabelaLinhasCab As String, strCampoRelTabelaLinhasDistLinhas As String, strUtilizador As String, inValidaStock As Nullable(Of Boolean), inRecalculoTotal As Nullable(Of Boolean)) As Integer
        Dim lngidDocumentoParameter As ObjectParameter = If(lngidDocumento.HasValue, New ObjectParameter("lngidDocumento", lngidDocumento), New ObjectParameter("lngidDocumento", GetType(Long)))

        Dim lngidTipoDocumentoParameter As ObjectParameter = If(lngidTipoDocumento.HasValue, New ObjectParameter("lngidTipoDocumento", lngidTipoDocumento), New ObjectParameter("lngidTipoDocumento", GetType(Long)))

        Dim intAccaoParameter As ObjectParameter = If(intAccao.HasValue, New ObjectParameter("intAccao", intAccao), New ObjectParameter("intAccao", GetType(Integer)))

        Dim strTabelaCabecalhoParameter As ObjectParameter = If(strTabelaCabecalho IsNot Nothing, New ObjectParameter("strTabelaCabecalho", strTabelaCabecalho), New ObjectParameter("strTabelaCabecalho", GetType(String)))

        Dim strTabelaLinhasParameter As ObjectParameter = If(strTabelaLinhas IsNot Nothing, New ObjectParameter("strTabelaLinhas", strTabelaLinhas), New ObjectParameter("strTabelaLinhas", GetType(String)))

        Dim strTabelaLinhasDistParameter As ObjectParameter = If(strTabelaLinhasDist IsNot Nothing, New ObjectParameter("strTabelaLinhasDist", strTabelaLinhasDist), New ObjectParameter("strTabelaLinhasDist", GetType(String)))

        Dim strCampoRelTabelaLinhasCabParameter As ObjectParameter = If(strCampoRelTabelaLinhasCab IsNot Nothing, New ObjectParameter("strCampoRelTabelaLinhasCab", strCampoRelTabelaLinhasCab), New ObjectParameter("strCampoRelTabelaLinhasCab", GetType(String)))

        Dim strCampoRelTabelaLinhasDistLinhasParameter As ObjectParameter = If(strCampoRelTabelaLinhasDistLinhas IsNot Nothing, New ObjectParameter("strCampoRelTabelaLinhasDistLinhas", strCampoRelTabelaLinhasDistLinhas), New ObjectParameter("strCampoRelTabelaLinhasDistLinhas", GetType(String)))

        Dim strUtilizadorParameter As ObjectParameter = If(strUtilizador IsNot Nothing, New ObjectParameter("strUtilizador", strUtilizador), New ObjectParameter("strUtilizador", GetType(String)))

        Dim inValidaStockParameter As ObjectParameter = If(inValidaStock.HasValue, New ObjectParameter("inValidaStock", inValidaStock), New ObjectParameter("inValidaStock", GetType(Boolean)))

        Dim inRecalculoTotalParameter As ObjectParameter = If(inRecalculoTotal.HasValue, New ObjectParameter("inRecalculoTotal", inRecalculoTotal), New ObjectParameter("inRecalculoTotal", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_AtualizaStock", lngidDocumentoParameter, lngidTipoDocumentoParameter, intAccaoParameter, strTabelaCabecalhoParameter, strTabelaLinhasParameter, strTabelaLinhasDistParameter, strCampoRelTabelaLinhasCabParameter, strCampoRelTabelaLinhasDistLinhasParameter, strUtilizadorParameter, inValidaStockParameter, inRecalculoTotalParameter)
    End Function

    Public Overridable Function sp_AtualizaStockNecessidades(lngidDocumento As Nullable(Of Long), lngidTipoDocumento As Nullable(Of Long), intAccao As Nullable(Of Integer), strUtilizador As String) As Integer
        Dim lngidDocumentoParameter As ObjectParameter = If(lngidDocumento.HasValue, New ObjectParameter("lngidDocumento", lngidDocumento), New ObjectParameter("lngidDocumento", GetType(Long)))

        Dim lngidTipoDocumentoParameter As ObjectParameter = If(lngidTipoDocumento.HasValue, New ObjectParameter("lngidTipoDocumento", lngidTipoDocumento), New ObjectParameter("lngidTipoDocumento", GetType(Long)))

        Dim intAccaoParameter As ObjectParameter = If(intAccao.HasValue, New ObjectParameter("intAccao", intAccao), New ObjectParameter("intAccao", GetType(Integer)))

        Dim strUtilizadorParameter As ObjectParameter = If(strUtilizador IsNot Nothing, New ObjectParameter("strUtilizador", strUtilizador), New ObjectParameter("strUtilizador", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_AtualizaStockNecessidades", lngidDocumentoParameter, lngidTipoDocumentoParameter, intAccaoParameter, strUtilizadorParameter)
    End Function

    Public Overridable Function sp_AtualizaUPC(lngidDocumento As Nullable(Of Long), lngidTipoDocumento As Nullable(Of Long), intAccao As Nullable(Of Integer), strTabelaCabecalho As String, strTabelaLinhas As String, strTabelaLinhasDist As String, strCampoRelTabelaLinhasCab As String, strCampoRelTabelaLinhasDistLinhas As String, strUtilizador As String) As Integer
        Dim lngidDocumentoParameter As ObjectParameter = If(lngidDocumento.HasValue, New ObjectParameter("lngidDocumento", lngidDocumento), New ObjectParameter("lngidDocumento", GetType(Long)))

        Dim lngidTipoDocumentoParameter As ObjectParameter = If(lngidTipoDocumento.HasValue, New ObjectParameter("lngidTipoDocumento", lngidTipoDocumento), New ObjectParameter("lngidTipoDocumento", GetType(Long)))

        Dim intAccaoParameter As ObjectParameter = If(intAccao.HasValue, New ObjectParameter("intAccao", intAccao), New ObjectParameter("intAccao", GetType(Integer)))

        Dim strTabelaCabecalhoParameter As ObjectParameter = If(strTabelaCabecalho IsNot Nothing, New ObjectParameter("strTabelaCabecalho", strTabelaCabecalho), New ObjectParameter("strTabelaCabecalho", GetType(String)))

        Dim strTabelaLinhasParameter As ObjectParameter = If(strTabelaLinhas IsNot Nothing, New ObjectParameter("strTabelaLinhas", strTabelaLinhas), New ObjectParameter("strTabelaLinhas", GetType(String)))

        Dim strTabelaLinhasDistParameter As ObjectParameter = If(strTabelaLinhasDist IsNot Nothing, New ObjectParameter("strTabelaLinhasDist", strTabelaLinhasDist), New ObjectParameter("strTabelaLinhasDist", GetType(String)))

        Dim strCampoRelTabelaLinhasCabParameter As ObjectParameter = If(strCampoRelTabelaLinhasCab IsNot Nothing, New ObjectParameter("strCampoRelTabelaLinhasCab", strCampoRelTabelaLinhasCab), New ObjectParameter("strCampoRelTabelaLinhasCab", GetType(String)))

        Dim strCampoRelTabelaLinhasDistLinhasParameter As ObjectParameter = If(strCampoRelTabelaLinhasDistLinhas IsNot Nothing, New ObjectParameter("strCampoRelTabelaLinhasDistLinhas", strCampoRelTabelaLinhasDistLinhas), New ObjectParameter("strCampoRelTabelaLinhasDistLinhas", GetType(String)))

        Dim strUtilizadorParameter As ObjectParameter = If(strUtilizador IsNot Nothing, New ObjectParameter("strUtilizador", strUtilizador), New ObjectParameter("strUtilizador", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_AtualizaUPC", lngidDocumentoParameter, lngidTipoDocumentoParameter, intAccaoParameter, strTabelaCabecalhoParameter, strTabelaLinhasParameter, strTabelaLinhasDistParameter, strCampoRelTabelaLinhasCabParameter, strCampoRelTabelaLinhasDistLinhasParameter, strUtilizadorParameter)
    End Function

    Public Overridable Function sp_ControloDocumentos(lngidDocumento As Nullable(Of Long), iDTipoDocumento As Nullable(Of Long), iDTiposDocumentoSeries As Nullable(Of Long), intAccao As Nullable(Of Integer), strTabelaCabecalho As String, strUtilizador As String) As Integer
        Dim lngidDocumentoParameter As ObjectParameter = If(lngidDocumento.HasValue, New ObjectParameter("lngidDocumento", lngidDocumento), New ObjectParameter("lngidDocumento", GetType(Long)))

        Dim iDTipoDocumentoParameter As ObjectParameter = If(iDTipoDocumento.HasValue, New ObjectParameter("IDTipoDocumento", iDTipoDocumento), New ObjectParameter("IDTipoDocumento", GetType(Long)))

        Dim iDTiposDocumentoSeriesParameter As ObjectParameter = If(iDTiposDocumentoSeries.HasValue, New ObjectParameter("IDTiposDocumentoSeries", iDTiposDocumentoSeries), New ObjectParameter("IDTiposDocumentoSeries", GetType(Long)))

        Dim intAccaoParameter As ObjectParameter = If(intAccao.HasValue, New ObjectParameter("intAccao", intAccao), New ObjectParameter("intAccao", GetType(Integer)))

        Dim strTabelaCabecalhoParameter As ObjectParameter = If(strTabelaCabecalho IsNot Nothing, New ObjectParameter("strTabelaCabecalho", strTabelaCabecalho), New ObjectParameter("strTabelaCabecalho", GetType(String)))

        Dim strUtilizadorParameter As ObjectParameter = If(strUtilizador IsNot Nothing, New ObjectParameter("strUtilizador", strUtilizador), New ObjectParameter("strUtilizador", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ControloDocumentos", lngidDocumentoParameter, iDTipoDocumentoParameter, iDTiposDocumentoSeriesParameter, intAccaoParameter, strTabelaCabecalhoParameter, strUtilizadorParameter)
    End Function

    Public Overridable Function sp_ExistemDocumentos(lngidArtigo As Nullable(Of Long), lngidTipoArtigo As Nullable(Of Long)) As ObjectResult(Of Nullable(Of Boolean))
        Dim lngidArtigoParameter As ObjectParameter = If(lngidArtigo.HasValue, New ObjectParameter("lngidArtigo", lngidArtigo), New ObjectParameter("lngidArtigo", GetType(Long)))

        Dim lngidTipoArtigoParameter As ObjectParameter = If(lngidTipoArtigo.HasValue, New ObjectParameter("lngidTipoArtigo", lngidTipoArtigo), New ObjectParameter("lngidTipoArtigo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Boolean))("sp_ExistemDocumentos", lngidArtigoParameter, lngidTipoArtigoParameter)
    End Function

    Public Overridable Function sp_F3M_DaResultadoPesquisa(query As String) As Integer
        Dim queryParameter As ObjectParameter = If(query IsNot Nothing, New ObjectParameter("query", query), New ObjectParameter("query", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_F3M_DaResultadoPesquisa", queryParameter)
    End Function

    Public Overridable Function sp_F3M_ExecutaQueryeDevolveID(query As String, id As ObjectParameter) As ObjectResult(Of Nullable(Of Long))
        Dim queryParameter As ObjectParameter = If(query IsNot Nothing, New ObjectParameter("query", query), New ObjectParameter("query", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Long))("sp_F3M_ExecutaQueryeDevolveID", queryParameter, id)
    End Function

    Public Overridable Function sp_InsereRetificacao() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_InsereRetificacao")
    End Function

    Public Overridable Function sp_Recalculo_AtualizaArtigos(iDRecalculo As Nullable(Of Long), strUtilizador As String, strTabelaLinhasDist As String) As Integer
        Dim iDRecalculoParameter As ObjectParameter = If(iDRecalculo.HasValue, New ObjectParameter("IDRecalculo", iDRecalculo), New ObjectParameter("IDRecalculo", GetType(Long)))

        Dim strUtilizadorParameter As ObjectParameter = If(strUtilizador IsNot Nothing, New ObjectParameter("strUtilizador", strUtilizador), New ObjectParameter("strUtilizador", GetType(String)))

        Dim strTabelaLinhasDistParameter As ObjectParameter = If(strTabelaLinhasDist IsNot Nothing, New ObjectParameter("strTabelaLinhasDist", strTabelaLinhasDist), New ObjectParameter("strTabelaLinhasDist", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Recalculo_AtualizaArtigos", iDRecalculoParameter, strUtilizadorParameter, strTabelaLinhasDistParameter)
    End Function

    Public Overridable Function sp_Recalculo_AtualizaContaCorrente(iDRecalculo As Nullable(Of Long)) As Integer
        Dim iDRecalculoParameter As ObjectParameter = If(iDRecalculo.HasValue, New ObjectParameter("IDRecalculo", iDRecalculo), New ObjectParameter("IDRecalculo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Recalculo_AtualizaContaCorrente", iDRecalculoParameter)
    End Function

    Public Overridable Function sp_Recalculo_AtualizaStock(iDRecalculo As Nullable(Of Long), strUtilizador As String) As Integer
        Dim iDRecalculoParameter As ObjectParameter = If(iDRecalculo.HasValue, New ObjectParameter("IDRecalculo", iDRecalculo), New ObjectParameter("IDRecalculo", GetType(Long)))

        Dim strUtilizadorParameter As ObjectParameter = If(strUtilizador IsNot Nothing, New ObjectParameter("strUtilizador", strUtilizador), New ObjectParameter("strUtilizador", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Recalculo_AtualizaStock", iDRecalculoParameter, strUtilizadorParameter)
    End Function

    Public Overridable Function sp_Recalculo_PCM_UPC(iDRecalculo As Nullable(Of Long)) As Integer
        Dim iDRecalculoParameter As ObjectParameter = If(iDRecalculo.HasValue, New ObjectParameter("IDRecalculo", iDRecalculo), New ObjectParameter("IDRecalculo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Recalculo_PCM_UPC", iDRecalculoParameter)
    End Function

    Public Overridable Function sp_Recalculo_VendasStocks(iDRecalculo As Nullable(Of Long)) As Integer
        Dim iDRecalculoParameter As ObjectParameter = If(iDRecalculo.HasValue, New ObjectParameter("IDRecalculo", iDRecalculo), New ObjectParameter("IDRecalculo", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Recalculo_VendasStocks", iDRecalculoParameter)
    End Function

    Public Overridable Function sp_RegistaCCRetCompras(lngidDocumento As Nullable(Of Long), lngidTipoDocumento As Nullable(Of Long), intVerificaRet As Nullable(Of Integer), strUtilizador As String) As Integer
        Dim lngidDocumentoParameter As ObjectParameter = If(lngidDocumento.HasValue, New ObjectParameter("lngidDocumento", lngidDocumento), New ObjectParameter("lngidDocumento", GetType(Long)))

        Dim lngidTipoDocumentoParameter As ObjectParameter = If(lngidTipoDocumento.HasValue, New ObjectParameter("lngidTipoDocumento", lngidTipoDocumento), New ObjectParameter("lngidTipoDocumento", GetType(Long)))

        Dim intVerificaRetParameter As ObjectParameter = If(intVerificaRet.HasValue, New ObjectParameter("intVerificaRet", intVerificaRet), New ObjectParameter("intVerificaRet", GetType(Integer)))

        Dim strUtilizadorParameter As ObjectParameter = If(strUtilizador IsNot Nothing, New ObjectParameter("strUtilizador", strUtilizador), New ObjectParameter("strUtilizador", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_RegistaCCRetCompras", lngidDocumentoParameter, lngidTipoDocumentoParameter, intVerificaRetParameter, strUtilizadorParameter)
    End Function

    Public Overridable Function sp_ValidaStock(inlngidDocumento As Nullable(Of Long), inlngidTipoDocumento As Nullable(Of Long), instrTabelaLinhasDist As String, instrUtilizador As String, inLimitMax As Nullable(Of Byte), inLimitMin As Nullable(Of Byte), inRutura As Nullable(Of Byte), inLimitMaxDel As Nullable(Of Byte), inLimitMinDel As Nullable(Of Byte), inRuturaDel As Nullable(Of Byte), instrNaturezaStock As String) As Integer
        Dim inlngidDocumentoParameter As ObjectParameter = If(inlngidDocumento.HasValue, New ObjectParameter("inlngidDocumento", inlngidDocumento), New ObjectParameter("inlngidDocumento", GetType(Long)))

        Dim inlngidTipoDocumentoParameter As ObjectParameter = If(inlngidTipoDocumento.HasValue, New ObjectParameter("inlngidTipoDocumento", inlngidTipoDocumento), New ObjectParameter("inlngidTipoDocumento", GetType(Long)))

        Dim instrTabelaLinhasDistParameter As ObjectParameter = If(instrTabelaLinhasDist IsNot Nothing, New ObjectParameter("instrTabelaLinhasDist", instrTabelaLinhasDist), New ObjectParameter("instrTabelaLinhasDist", GetType(String)))

        Dim instrUtilizadorParameter As ObjectParameter = If(instrUtilizador IsNot Nothing, New ObjectParameter("instrUtilizador", instrUtilizador), New ObjectParameter("instrUtilizador", GetType(String)))

        Dim inLimitMaxParameter As ObjectParameter = If(inLimitMax.HasValue, New ObjectParameter("inLimitMax", inLimitMax), New ObjectParameter("inLimitMax", GetType(Byte)))

        Dim inLimitMinParameter As ObjectParameter = If(inLimitMin.HasValue, New ObjectParameter("inLimitMin", inLimitMin), New ObjectParameter("inLimitMin", GetType(Byte)))

        Dim inRuturaParameter As ObjectParameter = If(inRutura.HasValue, New ObjectParameter("inRutura", inRutura), New ObjectParameter("inRutura", GetType(Byte)))

        Dim inLimitMaxDelParameter As ObjectParameter = If(inLimitMaxDel.HasValue, New ObjectParameter("inLimitMaxDel", inLimitMaxDel), New ObjectParameter("inLimitMaxDel", GetType(Byte)))

        Dim inLimitMinDelParameter As ObjectParameter = If(inLimitMinDel.HasValue, New ObjectParameter("inLimitMinDel", inLimitMinDel), New ObjectParameter("inLimitMinDel", GetType(Byte)))

        Dim inRuturaDelParameter As ObjectParameter = If(inRuturaDel.HasValue, New ObjectParameter("inRuturaDel", inRuturaDel), New ObjectParameter("inRuturaDel", GetType(Byte)))

        Dim instrNaturezaStockParameter As ObjectParameter = If(instrNaturezaStock IsNot Nothing, New ObjectParameter("instrNaturezaStock", instrNaturezaStock), New ObjectParameter("instrNaturezaStock", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ValidaStock", inlngidDocumentoParameter, inlngidTipoDocumentoParameter, instrTabelaLinhasDistParameter, instrUtilizadorParameter, inLimitMaxParameter, inLimitMinParameter, inRuturaParameter, inLimitMaxDelParameter, inLimitMinDelParameter, inRuturaDelParameter, instrNaturezaStockParameter)
    End Function

    Public Overridable Function sp_vwExamesProps() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_vwExamesProps")
    End Function

End Class
